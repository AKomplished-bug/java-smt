<!--
This file is part of JavaSMT,
an API wrapper for a collection of SMT solvers:
https://github.com/sosy-lab/java-smt

SPDX-FileCopyrightText: 2020 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->

<project name="maven" basedir="."
         xmlns:ivy="antlib:org.apache.ivy.ant"
         xmlns:artifact="antlib:org.apache.maven.artifact.ant">

    <!-- Defined maven snapshots and staging repository id and url -->
    <property name="ossrh-snapshots-repository-url"
        value="https://oss.sonatype.org/content/repositories/snapshots" />
    <property name="ossrh-staging-repository-url"
        value="https://oss.sonatype.org/service/local/staging/deploy/maven2" />

    <!-- There server id in the Maven settings.xml -->
    <property name="ossrh-server-id" value="ossrh" />

    <target name="gen-pom" depends="load-ivy, determine-version" description="Generate a POM file from Ivy metadata">
        <property name="ivy.pom.version" value="${version}"/>

        <ivy:makepom ivyfile="${ivy.dep.file}" conf="core,runtime-smtinterpol,runtime-princess-with-javacup" pomfile="pom.xml" templatefile="pom_template.xml">
            <mapping conf="core,runtime-smtinterpol,runtime-princess-with-javacup" scope="compile"/>
        </ivy:makepom>

        <!-- Maven group is "sosy-lab", not "sosy_lab"-->
        <replace file="pom.xml">
            <replacetoken>sosy_lab</replacetoken>
            <replacevalue>sosy-lab</replacevalue>
        </replace>
    </target>

    <target name="deploy-to-maven-central" depends="dist, gen-pom, jar"
        description="deploy snapshot version to Maven snapshot repository">

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file" />
            <arg value="-Durl=${ossrh-snapshots-repository-url}" />
            <arg value="-DrepositoryId=${ossrh-server-id}" />
            <arg value="-DpomFile=pom.xml" />
            <arg value="-Dfile=${jar.file}" />
        </artifact:mvn>
    </target>

    <!-- before this, update project version (both build.xml and pom.xml) from SNAPSHOT to RELEASE -->
    <target name="stage" depends="dist, gen-pom, jar, sources" description="deploy release version to Maven staging repository">

        <!-- Sign and deploy the main artifact. -->
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
            <arg value="-Durl=${ossrh-staging-repository-url}" />
            <arg value="-DrepositoryId=${ossrh-server-id}" />
            <arg value="-DpomFile=pom.xml" />
            <arg value="-Dfile=${jar.file}" />
            <arg value="-Pgpg" />
        </artifact:mvn>

        <!-- Sign and deploy the sources artifact -->
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
            <arg value="-Durl=${ossrh-staging-repository-url}" />
            <arg value="-DrepositoryId=${ossrh-server-id}" />
            <arg value="-DpomFile=pom.xml" />
            <arg value="-Dfile=${ivy.module}-${version}-sources.jar" />
            <arg value="-Dclassifier=sources" />
            <arg value="-Pgpg" />
        </artifact:mvn>

        <!-- sign and deploy the javadoc artifact -->
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
            <arg value="-Durl=${ossrh-staging-repository-url}" />
            <arg value="-DrepositoryId=${ossrh-server-id}" />
            <arg value="-DpomFile=pom.xml" />
            <arg value="-Dfile=${ivy.module}-${version}-javadoc.jar" />
            <arg value="-Dclassifier=javadoc" />
            <arg value="-Pgpg" />
        </artifact:mvn>
    </target>

    <!-- macro for pushing solvers into a Maven repository
         (push into the staging area, from there manual publication is required afterwards) -->
    <macrodef name="stage-solver-file">
      <attribute name="filename"/>
      <attribute name="fileending"/>
      <attribute name="filedirectory" default="lib/java/runtime-${stage.solver}"/>
      <sequential>
        <artifact:mvn>
          <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
          <arg value="-Durl=${ossrh-staging-repository-url}" />
          <arg value="-DrepositoryId=${ossrh-server-id}" />
          <arg value="-DpomFile=solvers_maven_conf/maven_${stage.solver}_pom.xml" />
          <arg value="-Dfile=@{filedirectory}/@{filename}.@{fileending}" />
          <arg value="-Dclassifier=@{filename}" />
          <arg value="-Dpackaging=@{fileending}" />
          <arg value="-Dversion=${stage.revision}" />
          <arg value="-DgeneratePom=false" />
          <arg value="-Pgpg" />
        </artifact:mvn>
      </sequential>
    </macrodef>

    <target name="stage-mathsat5" depends="build-dependencies"
            description="deploy current version of MathSAT to Maven staging repository">
        <!-- get revision from dependencies -->
        <ivy:artifactproperty name="[artifact].revision" value="[revision]"/>
        <property name="stage.solver" value="mathsat"/>
        <property name="stage.revision" value="${mathsat.revision}"/>
        <!-- then publish the files -->
        <stage-solver-file filename="libmathsat5j" fileending="so"/>
        <stage-solver-file filename="mathsat" fileending="dll"/>
        <stage-solver-file filename="mathsat5j" fileending="dll"/>
        <stage-solver-file filename="mpir" fileending="dll"/>
    </target>

    <target name="stage-z3" depends="build-dependencies, install-contrib"
            description="deploy current version of Z3 to Maven staging repository">
        <!-- get revision from dependencies -->
        <ivy:artifactproperty name="[artifact].revision" value="[revision]"/>
        <property name="stage.solver" value="z3"/>
        <property name="stage.revision" value="${com.microsoft.z3.revision}"/>
        <!-- then publish the files -->
        <stage-solver-file filename="com.microsoft.z3" fileending="jar"/>
        <stage-solver-file filename="libz3java" fileending="so"/>
        <stage-solver-file filename="libz3java" fileending="dll"/>
        <stage-solver-file filename="libz3java" fileending="dylib"/>
        <stage-solver-file filename="libz3" fileending="so"/>
        <stage-solver-file filename="libz3" fileending="dll"/>
        <stage-solver-file filename="libz3" fileending="dylib"/>
    </target>

    <target name="stage-boolector" depends="build-dependencies"
            description="deploy current version of Boolector to Maven staging repository">
        <!-- get revision from dependencies -->
        <ivy:artifactproperty name="[artifact].revision" value="[revision]"/>
        <property name="stage.solver" value="boolector"/>
        <property name="stage.revision" value="${libboolector.revision}"/>
        <!-- then publish the files -->
        <stage-solver-file filename="libboolector" fileending="so"/>
        <stage-solver-file filename="libminisat" fileending="so"/>
        <stage-solver-file filename="libpicosat" fileending="so"/>
    </target>

    <target name="stage-cvc4" depends="build-dependencies"
            description="deploy current version of CVC4 to Maven staging repository">
        <!-- get revision from dependencies -->
        <ivy:artifactproperty name="[artifact].revision" value="[revision]"/>
        <property name="stage.solver" value="cvc4"/>
        <property name="stage.revision" value="${CVC4.revision}"/>
        <!-- then publish the files -->
        <stage-solver-file filename="CVC4" fileending="jar"/>
        <stage-solver-file filename="libcvc4" fileending="so"/>
        <stage-solver-file filename="libcvc4jni" fileending="so"/>
        <stage-solver-file filename="libcvc4parser" fileending="so"/>
    </target>
</project>
