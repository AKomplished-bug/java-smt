/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sosy_lab.java_smt;

public class opensmt2JapiJNI {
  public final static native void osmt_expr_x_set(long jarg1, osmt_expr jarg1_, long jarg2);
  public final static native long osmt_expr_x_get(long jarg1, osmt_expr jarg1_);
  public final static native long new_osmt_expr();
  public final static native void delete_osmt_expr(long jarg1);
  public final static native void osmt_context_c_set(long jarg1, osmt_context jarg1_, long jarg2);
  public final static native long osmt_context_c_get(long jarg1, osmt_context jarg1_);
  public final static native long new_osmt_context();
  public final static native void delete_osmt_context(long jarg1);
  public final static native void osmt_set_verbosity(long jarg1, osmt_context jarg1_, int jarg2);
  public final static native String osmt_version();
  public final static native void osmt_print_expr(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_);
  public final static native long osmt_mk_context(int jarg1);
  public final static native void osmt_del_context(long jarg1, osmt_context jarg1_);
  public final static native void osmt_reset(long jarg1, osmt_context jarg1_);
  public final static native void osmt_push(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_);
  public final static native void osmt_pop(long jarg1, osmt_context jarg1_);
  public final static native int osmt_check(long jarg1, osmt_context jarg1_);
  public final static native long osmt_conflicts(long jarg1, osmt_context jarg1_);
  public final static native long osmt_decisions(long jarg1, osmt_context jarg1_);
  public final static native long osmt_get_value(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_);
  public final static native int osmt_get_bool(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_);
  public final static native void osmt_polarity(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_, int jarg3);
  public final static native void osmt_get_model(long jarg1, osmt_context jarg1_, String jarg2);
  public final static native void osmt_dump_assertions_to_file(long jarg1, osmt_context jarg1_, String jarg2);
  public final static native long osmt_mk_true(long jarg1, osmt_context jarg1_);
  public final static native long osmt_mk_false(long jarg1, osmt_context jarg1_);
  public final static native long osmt_mk_bool_var(long jarg1, osmt_context jarg1_, String jarg2);
  public final static native long osmt_mk_real_var(long jarg1, osmt_context jarg1_, String jarg2);
  public final static native long osmt_mk_or(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_, long jarg3);
  public final static native long osmt_mk_and(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_, long jarg3);
  public final static native long osmt_mk_eq(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_, long jarg3, osmt_expr jarg3_);
  public final static native long osmt_mk_ite(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_, long jarg3, osmt_expr jarg3_, long jarg4, osmt_expr jarg4_);
  public final static native long osmt_mk_not(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_);
  public final static native long osmt_mk_impl(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_, long jarg3, osmt_expr jarg3_);
  public final static native long osmt_mk_xor(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_, long jarg3, osmt_expr jarg3_);
  public final static native long osmt_mk_num_from_string(long jarg1, osmt_context jarg1_, String jarg2);
  public final static native long osmt_mk_num_from_frac(long jarg1, osmt_context jarg1_, int jarg2, int jarg3);
  public final static native long osmt_mk_num_from_num(long jarg1, osmt_context jarg1_, int jarg2);
  public final static native long osmt_mk_plus(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_, long jarg3);
  public final static native long osmt_mk_minus(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_, long jarg3, osmt_expr jarg3_);
  public final static native long osmt_mk_times(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_, long jarg3);
  public final static native long osmt_mk_lt(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_, long jarg3, osmt_expr jarg3_);
  public final static native long osmt_mk_leq(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_, long jarg3, osmt_expr jarg3_);
  public final static native long osmt_mk_gt(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_, long jarg3, osmt_expr jarg3_);
  public final static native long osmt_mk_geq(long jarg1, osmt_context jarg1_, long jarg2, osmt_expr jarg2_, long jarg3, osmt_expr jarg3_);
}
